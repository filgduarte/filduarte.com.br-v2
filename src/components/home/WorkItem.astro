---
const { title, slug, tags } = Astro.props;
---

<div class="work-item" style={`--_thumbnail: url(/img/work_${slug}_thumb.webp);`}>
    <a href={`/work/${slug}`}>
        <img src={`/img/work_${slug}_thumb.webp`} alt={title} class="work-item__thumbnail" />
        <div class="work-item__info">
            <h3>{title}</h3>
            <ul class="tag-list">
                {
                    tags.map( tag => (
                        <li class="tag">{tag}</li>
                    ))
                }
            </ul>
        </div>
    </a>
</div>

<style>
    .work-item {
        --_gap: calc(var(--default-spacing) / 10);

        position: relative;
        width: 25%;
        aspect-ratio: 1;
        background-image: var(--_thumbnail);
        background-size: cover;
    }

    .work-item:nth-child(1),
    .work-item:nth-child(5) {
        transform: translateX(200%);
    }

    .work-item:nth-child(3) {
        transform: translateX(300%);
    }

    .work-item:nth-child(2) {
        transform: translateX(100%);
    }

    .work-item::before {
        content: '';
        display: block;
        position: absolute;
        width: 100%;
        height: 100%;
        left: 0;
        top: 0;
        background-image:
            var(--_theme-noise-background), 
            linear-gradient(135deg, transparent, var(--_theme-color-accent));
        opacity: 0.85;
        backdrop-filter: grayscale(100%);
    }

    a {
        display: block;
        position: relative;
        height: 100%;
        color: var(--_theme-color-foreground);
        opacity: 0;
        transition: opacity 500ms;
        z-index: 1;
    }

    a:hover {
        text-decoration: none;
        opacity: 1;
    }

    .work-item__info {
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
        position: absolute;
        top: 0;
        left: 0;
        padding: calc(var(--default-spacing) / 2);
        width: 100%;
        background-color: rgb( var(--_theme-color-accent-rgb) / 0.75 );
        background-image:
            var(--_theme-noise-background),
            linear-gradient(135deg, rgb( var(--_theme-color-background-rgb) / 0.75 ), transparent);
        transform-origin: top left;
        transform: scale(0.1);
        transition: transform 500ms ease;
        pointer-events: none;
    }

    a:hover .work-item__info {
        transform: scale(1);
    }

    h3 {
        margin-bottom: var(--_gap);
    }

    .tag-list {
        display: flex;
        flex-wrap: wrap;
        gap: var(--_gap);
        padding: 0;
        margin: 0;
        list-style-type: none;
        font-size: 0.75rem;
    }

    .tag {
        padding: 2px var(--_gap);
        color: var(--_theme-color-background);
        background-color: var(--_theme-color-primary);
    }
</style>

<script>
    const works = document.querySelectorAll('.work-item');

    function showDescription(event) {
        const workItem = event.currentTarget;
        const workItemInfo = workItem.querySelector('.work-item__info');
        const workItemBounding = workItem.getBoundingClientRect();

        workItemInfo.style.top = `${event.clientY - workItemBounding.top}px`;
        workItemInfo.style.left = `${event.clientX - workItemBounding.left}px`;
    }

    works.forEach( (workItem) => {
        workItem.addEventListener('mousemove', showDescription);
    })
</script>